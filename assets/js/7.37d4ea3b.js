(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{280:function(t,s,r){t.exports=r.p+"assets/img/1678785960956.c69acbc1.jpg"},295:function(t,s,r){"use strict";r.r(s);var a=r(14),v=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("p",[s("code",[t._v("Queue")]),t._v(" 队列")]),t._v(" "),s("h2",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("队列")]),t._v("是一个有序的线性表,可以用"),s("strong",[t._v("数组")]),t._v("或者链表"),s("strong",[t._v("实现")])]),t._v(" "),s("li",[s("strong",[t._v("队列")]),t._v("遵循"),s("strong",[t._v("先进先出("),s("code",[t._v("LILO")]),t._v(":"),s("code",[t._v("first in first out")]),t._v(")")]),t._v(" 原则,即现存的数据先出队列,后存的数据后出队列")])]),t._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[s("img",{attrs:{src:r(280),alt:"队列"}})]),t._v(" "),s("p",[t._v("以上是一个顺序存储队列的示意图,标红的字母表示目前不在队列中,"),s("strong",[t._v("但是这些数据依旧在开辟的存储空间(数组)中(俗称脏数据)")]),t._v(",这点很重要，因为我们只是"),s("strong",[t._v("挪动头尾代表的索引")]),t._v(","),s("strong",[t._v("并不会删除具体的数据")]),t._v(",从图中可以看出:")]),t._v(" "),s("ul",[s("li",[t._v("①图中:空队列的时候队头和队尾都指向默认的一个节点")]),t._v(" "),s("li",[t._v("②图中:入队的时候只需要挪动队尾的位置即可,即改变rear变量的值")]),t._v(" "),s("li",[t._v("③图中:出队同入队只需要挪动队头的位置即可,及改变front变量的值")]),t._v(" "),s("li",[t._v("③④图中:当队尾达到存储空间尾部即代表队列已满")])]),t._v(" "),s("h2",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("h2",{attrs:{id:"解决思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[t._v("#")]),t._v(" 解决思路")]),t._v(" "),s("h2",{attrs:{id:"代码示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[t._v("#")]),t._v(" 代码示例")])])}),[],!1,null,null,null);s.default=v.exports}}]);